# Prolog
# Author: Sarah Bombrys
# Date: September 2020
'''
Purpose: To perform both encryption and decryption using the Vignere Cipher
Pre-Conditions: User inputs an alphabetic message string and an alphabetic
    keyword string.
Post-Conditions: Depending on user selection the program will return the decrypted
    or encrypted alphabetic message.
'''

def make_numeric(text):
    '''
    Purpose: finds and returns the numerical representation of a string, in which each letter
        corresponds to a number from 0 to 25. 
    Pre-Conditions: A string consisiting of only alphabetic characters and spaces.
    Post-Conditions: Returns a list of integer numbers 
    '''
    # simplify - standardize to lowercase and remove spaces, periods
    text = text.lower()
    text = text.replace(" ", "")
    text = text.replace(".", "")

    # initialize a list to store the resulting integers
    num_text = []

    # convert each character to its numeric counterpart and add to list
    for char in text:
        number = ord(char) - 97
        num_text.append(number)

    # return this list
    return num_text

def make_alphabetic(num_list):
    '''
    Purpose: takes a list of numbers and returns their alphabetic equivalent
    Pre-Conditions: a list of integers from 0 to 25
    Post-Conditions: Returns a string of corresponding letters
    '''
    # initialize a string
    text = ""
    
    # convert each number to its alphabetic equivalent
    for num in num_list:
        letter = chr(num + 97)
        text += letter

    return text

def main():
    # title and information
    print("Hello! This program will perform encryption and decryption using the Vigenere cipher\n")
    
    # ask the user what they would like to do
    response = input('Please type whether you would like to: "encrypt", "decrypt" or "end": ')

    # check for input validation
    while (response != "end") and (response != "encrypt") and (response != "decrypt"):
        # repeat question
        response = input("I'm sorry, please enter a valid response: ")

    # check for "end" command
    while response != "end":

        # customize messages based on choice
        if response == "encrypt":
            input_prompt = "Please provide the message to be encrypted:"
            end_prompt = "The encrypted message is:"
            # value for formula
            e_or_d = 1
            
        else:    # decrypt chosen
            input_prompt = "Please provide the message to be decrypted:"
            end_prompt = "The decrypted message is:"
            e_or_d = -1

        # get the message and keyword
        print(input_prompt)
        message = input()

        key = input("Please provide the keyword for the cipher: ")

        # begin encryption/decryption
        num_message = make_numeric(message)
        num_key = make_numeric(key)

        # modify each number based on keyword
        for i in range(len(num_message)):
            # shift letter according to corresponding letter of keyword
            num_message[i] = (num_message [i] + e_or_d * num_key[0]) % 26
                
            # rearrange keyword list
            holder = num_key[0]
            num_key.append(holder)
            num_key.pop(0)

        # convert back to alphabetic
        final_message = make_alphabetic(num_message)

        # output result
        print(end_prompt, "\n", final_message)
        
        # new iteration - ask the user what they would like to do
        response = input('\nPlease type whether you would like to: "encrypt", "decrypt" or "end": ')

        # input validation
        while (response != "end") and (response != "encrypt") and (response != "decrypt"):
            # repeat question
            response = input("I'm sorry, please enter a valid response: ")

main()
